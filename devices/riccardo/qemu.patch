diff -urN --no-dereference -x prefix -x scripts -x tests -x build -x GNUmakefile /tmp/qemu-8.2.1/hw/misc/Kconfig /home/riccardo/qemu-8.2.1/hw/misc/Kconfig
--- /tmp/qemu-8.2.1/hw/misc/Kconfig	2024-01-29 19:13:22.000000000 +0000
+++ /home/riccardo/qemu-8.2.1/hw/misc/Kconfig	2024-03-15 04:42:08.558826217 +0000
@@ -1,3 +1,7 @@
+config LKP_ENC
+	bool
+	default y
+
 config APPLESMC
     bool
     depends on ISA_BUS
diff -urN --no-dereference -x prefix -x scripts -x tests -x build -x GNUmakefile /tmp/qemu-8.2.1/hw/misc/lkp_enc.c /home/riccardo/qemu-8.2.1/hw/misc/lkp_enc.c
--- /tmp/qemu-8.2.1/hw/misc/lkp_enc.c	1970-01-01 00:00:00.000000000 +0000
+++ /home/riccardo/qemu-8.2.1/hw/misc/lkp_enc.c	2024-03-15 04:45:50.798081436 +0000
@@ -0,0 +1,100 @@
+#include "qemu/osdep.h"
+#include "hw/pci/msi.h"
+#include "hw/pci/pci.h"
+
+#define TYPE_LKP_ENC "lkp_enc"
+#define LKP_ENC(obj) OBJECT_CHECK(lkp_enc, (obj), TYPE_LKP_ENC)
+
+typedef struct {
+    PCIDevice parent_obj;
+    uint32_t seed_register;
+    char string[256];
+    MemoryRegion mmio;
+} lkp_enc;
+
+static uint64_t mmio_read(void *opaque, hwaddr addr, unsigned size) {
+    lkp_enc *dev = (lkp_enc *)opaque;
+
+    if(addr == 0x0) {
+        return dev->seed_register;
+    }
+    else if(addr >= 0x4 && size == 1) {
+        int index = addr - 0x4;
+
+        return dev->string[index];
+    }
+
+    return 0x0;
+}
+
+static char cipher(char c, uint32_t seed) {
+    if('A' <= c && c <= 'Z') {
+        return ((c - 'A') + seed) % 26 + 'A';
+    }
+    else if('a' <= c && c <= 'z') {
+        return ((c - 'a') + seed) % 26 + 'a';
+    }
+    else {
+        return c;
+    }
+}
+
+static void mmio_write(void *opaque, hwaddr addr, uint64_t val, unsigned size) {
+    lkp_enc *dev = (lkp_enc *)opaque;
+
+    if(addr == 0x0) {
+        dev->seed_register = val;
+    }
+    else if(addr >= 0x4 && size == 1) {
+        int index = addr - 0x4;
+        char app = (char)val;
+
+        dev->string[index] = cipher(app, dev->seed_register);
+    }
+
+    return;
+}
+
+static const MemoryRegionOps lkp_enc_ops = {
+    .read = mmio_read,
+    .write = mmio_write,
+};
+
+static void lkp_enc_realize(PCIDevice *pdev, Error **errp) {
+    lkp_enc *s = LKP_ENC(pdev);
+    memory_region_init_io(&s->mmio, OBJECT(s), &lkp_enc_ops, s,
+                          "lkp_enc", 4096);
+    pci_register_bar(&s->parent_obj, 0, PCI_BASE_ADDRESS_SPACE_MEMORY, &s->mmio);
+}
+
+static void lkp_enc_class_init(ObjectClass *class, void *data) {
+    DeviceClass *dc = DEVICE_CLASS(class);
+    PCIDeviceClass *k = PCI_DEVICE_CLASS(class);
+
+    k->realize = lkp_enc_realize;
+    k->vendor_id = PCI_VENDOR_ID_QEMU;
+    k->device_id = 0xcafe;
+    k->revision = 0x10;
+    k->class_id = PCI_CLASS_OTHERS;
+    
+    set_bit(DEVICE_CATEGORY_MISC, dc->categories);
+}
+
+static void lkp_enc_register_types(void) {
+    static InterfaceInfo interfaces[] = {
+        { INTERFACE_CONVENTIONAL_PCI_DEVICE },
+        { },
+    };
+
+    static const TypeInfo lkp_enc_info = {
+        .name = TYPE_LKP_ENC,
+        .parent = TYPE_PCI_DEVICE,
+        .instance_size = sizeof(lkp_enc),
+        .class_init    = lkp_enc_class_init,
+        .interfaces = interfaces,
+    };
+
+    type_register_static(&lkp_enc_info);
+}
+
+type_init(lkp_enc_register_types)
diff -urN --no-dereference -x prefix -x scripts -x tests -x build -x GNUmakefile /tmp/qemu-8.2.1/hw/misc/meson.build /home/riccardo/qemu-8.2.1/hw/misc/meson.build
--- /tmp/qemu-8.2.1/hw/misc/meson.build	2024-01-29 19:13:22.000000000 +0000
+++ /home/riccardo/qemu-8.2.1/hw/misc/meson.build	2024-03-15 05:02:51.797367062 +0000
@@ -1,3 +1,4 @@
+system_ss.add(when: 'CONFIG_LKP_ENC', if_true: files('lkp_enc.c'))
 system_ss.add(when: 'CONFIG_APPLESMC', if_true: files('applesmc.c'))
 system_ss.add(when: 'CONFIG_EDU', if_true: files('edu.c'))
 system_ss.add(when: 'CONFIG_FW_CFG_DMA', if_true: files('vmcoreinfo.c'))
